from django.urls import reverse
from rest_framework.test import APITestCase, APIClient
from rest_framework.views import status
from .models import MotorwayEvent
from .serializers import MotorwayEventSerializer


class BaseViewTest(APITestCase):
    client = APIClient()

    @staticmethod
    def create_event(event_id, **kwargs):
        MotorwayEvent.objects.create(event_id,
                                     motorway=6,
                                     direction="n",
                                     metadata="Event Generated by Tweet Miner at 2018-10-20T20:50:12.286910",
                                     reason="congestion",
                                     timestamp="2018-10-17T08:54:13",
                                     junctions="14 15",
                                     closest_cities="Stafford (N) Stoke / Newcastle-u-Lyme",
                                     time_day_worded="Wed",
                                     time_day_numerical=17,
                                     time_hour=8,
                                     time_minutes=54,
                                     time_seconds=13,
                                     time_year=2018)

    def setUp(self):
        self.create_event(event_id=101)
        self.create_event(event_id=8)
        self.create_event(event_id=121)


class TestGetAllEventsTest(BaseViewTest):

    def test_get_all_events(self):
        """
        Ensure the database is seeded with the set_up
        """
        response = self.client.get(
            reverse("events-all")  # Hit the events-all endpoint
        )

        all_events = MotorwayEvent.objects.all()  # Returns a QuerySet of all Events
        serialized = MotorwayEventSerializer(
            all_events, many=True)  # Convert to python dt

        print(response.data)
        self.assertEqual(response.data, serialized.data)
        self.assertEqual(response.status_code, status.HTTP_200_OK)
